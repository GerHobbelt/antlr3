- implement more examples
- Fix remaining FIXMEs in (Python|AST).stg
- complete runtime
- restructure unittests for runtime modules
- better test coverage for runtime modules
- antlr features
  - tree parsers
    - 2nd half of simplecTreeParser example
- setup.py
- turn some methods into attributes
  - (String|CommonToken)Stream.index()
  - (String|CommonToken)Stream.size() --> __len__
- documentation in docstrings
- document differences to java API
- add methods to emulate java API, but mark 'em as deprecated
- using Stream.index as a state for 'error-already-reported' or memoization
  will be a problem when the stream is not a linear buffer
- optimizations which should be explored:
  - DFA: perhaps zip() the lists into a tuple 
    (eot, eof, min, max, accept, special, transition)
    for each state. checkout potential performance gain.
  - use compressed tables like Java and decompress on import
    -> uncompressed tables for Java.g create a 15MB JavaLexer.py and Python
       consumed >800MB and was killed by the kernel trying to compile it 
  - raise exception for failed backtracking, get rid of 
    "if self.failed: return"
  - StringStream: look into optimizing LA(). Perhaps use LAk instead of LA(k)
    and create the attributes when needed.
  - Perform some magic to improve dfaStateSwitch.
  - in lexer rules:
    LA == u'a' or LA == u'b' or LA == u'c'...
    -> LA in (u'a', u'b', u'c', ...)
    or "LA in self.set_xyz" with set_xyz as a class member
  - lexer: operate on ordinals not character strings
  - make BaseTree.nil() an attribute? or singleton?
  - psycho??
- ...
