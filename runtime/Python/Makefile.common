# -*- mode: Makefile -*-

PYTHON?=python2.5

LIB=$(BASE)/../../lib
SRC=$(BASE)/../../src
RUNTIME=$(BASE)/../Java/src
BUILD=$(BASE)/build
CLASSPATH=$(LIB)/antlr-2.7.7.jar:$(LIB)/junit-4.2.jar:$(LIB)/stringtemplate-3.0.jar

ANTLR3VER=3.0b7

JAVAC=javac -classpath $(CLASSPATH)
JAVA=java

ANTLR=$(JAVA) -classpath $(CLASSPATH):$(BUILD) org.antlr.Tool
ANTLR2=$(JAVA) -classpath $(LIB)/antlr-2.7.7.jar antlr.Tool

.PHONY:
generate:
	cd $(SRC)/org/antlr/tool/; $(ANTLR2) antlr.g
	cd $(SRC)/org/antlr/tool/; $(ANTLR2) antlr.print.g
	cd $(SRC)/org/antlr/tool/; $(ANTLR2) assign.types.g
	cd $(SRC)/org/antlr/tool/; $(ANTLR2) define.g
	cd $(SRC)/org/antlr/tool/; $(ANTLR2) buildnfa.g
	cp $(SRC)/org/antlr/tool/ANTLRTokenTypes.txt $(SRC)/org/antlr/codegen/ANTLRTokenTypes.txt
	cd $(SRC)/org/antlr/codegen/; $(ANTLR2) codegen.g

.PHONY: build
build:
	$(JAVAC) -d $(BUILD) $(SRC)/org/antlr/Tool.java $(SRC)/org/antlr/*/*.java $(RUNTIME)/org/antlr/*/*.java $(RUNTIME)/org/antlr/*/*/*.java


.PHONY: rebuild
rebuild: generate build


lint%: %.py
	PYTHONPATH=$(BASE) pylint --rcfile=$(BASE)/pylintrc --output-format=parseable $<
